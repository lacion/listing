service: listing-admin
frameworkVersion: '>=1.28.0 <2.0.0'

provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  logRetentionInDays: 7
  memorySize: 128
  usagePlan:
    throttle:
      burstLimit: 10
      rateLimit: 2

plugins:
  - serverless-iam-roles-per-function

package:
  individually: true
  exclude:
    - ./**

functions:
  handler:
    handler: bin/ladmin
    package:
      include:
        - ./bin/ladmin
    events:
      - http:
          path: subscribers
          method: GET
          cors: true
      - http:
          path: subscribers
          method: PUT
          cors: true
      - http:
          path: subscribers
          method: DELETE
          cors: true
      - http:
          path: complaints
          method: GET
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "dynamodb:DescribeTable"
          - "dynamodb:Query"
          - "dynamodb:Scan"
          - "dynamodb:GetItem"
          - "dynamodb:PutItem"
          - "dynamodb:UpdateItem"
          - "dynamodb:DeleteItem"
          - "dynamodb:BatchWriteItem"
        Resource:
          - { 'Fn::ImportValue': '${self:provider.stage}-SubscriptionsTableArn' }
      - Effect: Allow
        Action:
          - "dynamodb:DescribeTable"
          - "dynamodb:Query"
          - "dynamodb:Scan"
          - "dynamodb:GetItem"
        Resource:
          - { 'Fn::ImportValue': '${self:provider.stage}-NotificationsTableArn' }
    environment:
      API_TOKEN: ${self:custom.secrets.apiToken}
      SUBSCRIBERS_TABLE: ${self:custom.subscribersTableName}
      NOTIFICATIONS_TABLE: ${self:custom.snsTableName}
      SUPPORTED_NEWSLETTERS: ${self:custom.secrets.supportedNewsletters}

custom:
  secrets: ${file(secrets.json)}
  subscribersTableName: ${self:provider.stage}-listing-subscribers
  snsTableName: ${self:provider.stage}-listing-sesnotify
  snsTopicName: ${self:provider.stage}-listing-ses-notifications
  stages:
    - local
    - dev

